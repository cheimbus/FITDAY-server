name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 접근
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 생성
        run: echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: application-prod.yml 파일 생성
        run: echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-prod.yml

      - name: .env 파일 생성
        run: echo "${{ secrets.ENV_FILE }}" > ./scripts/.env

      - name: gradlew 권한 부여
        run: chmod +x gradlew

      - name: 테스트 및 빌드하기
        run: sudo ./gradlew clean -Dspring.profiles.active=prod

      - name: AWS 리소스에 접근할 수 있도록 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t github-actions .

      - name: Docker 이미지 Tag
        run: docker tag github-actions ${{ steps.login-ecr.outputs.registry }}/github-actions:latest

      - name: ECR 에 Docker 이미지 Push
        run: docker push ${{ steps.login-ecr.outputs.registry }}/github-actions:latest

      - name: 파일 압축
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts docker-compose.yml docker-compose-nginx.yml

      - name: S3에 프로젝트 폴더 업로드
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://siu-github-actions-server/$GITHUB_SHA.tar.gz

      - name: EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name github-actions-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Production
          --s3-location bucket=siu-github-actions-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz